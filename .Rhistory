x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
cd specdata
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
pollutantmean("specdata", "sulfate", 1:10)
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
if(!file.exists("rprog-data-specdata.zip")) {
temp <- tempfile()
download.file("https://eventing.coursera.org/api/redirectStrict/lv2sGEoCHrTmTWiIqmqZLZ-xPPcYPeUmkj3f905vAu1YYh64KGYddOlHxrvnjYc--UXddqKsXzVD3IhElUjGrw.UgoOCgjdmmTFxkyiRHliaw._1YVDGQhyn50ifKIx6-FfQzMEn6slhZ8y3Zhyj8SdHBJBFOyIiy9irLbEHs5MavHSkEwTaVeo9LnlMSSniBP6FrwIvFeBBn5sKpiSqWdEFEz03NTaEBmwLBO3_FTnMmgALDkRdM-F-SNJJulDQTyQxEwSWeRUbRSrG-_BY-dmyA5XPZcxI52ReVO6eszFqpGxyI_KInBkc2lETLNcv9w0eQhkJH3ZfCudm3YsH3HH1eGuRu8jS85oz22GadmwWtAoKhuuE9Wrj6pYcVN8Gxo-UiihPlgXsH1uhWMS7gPOml5RFHw3s97Pi8CiX5CvGrqgVn7gV2qOgVqwb_TP3h9Vzj6k93gwR19qwH6khcAScR_lJgV-bnyS3yn1P3VoqDo",temp)
unzip(temp)
unlink(temp)
}
if(!file.exists("rprog-data-specdata.zip")) {
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/rprog%2Fdata%2Fspecdata.zip",temp)
unzip(temp)
unlink(temp)
}
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
f <- function(x) {y <-5 x+y}
pollutmean <- function(directory, pollutant, id = 1:332) {}
View(pollutmean)
View(pollutmean)
pollutmean <- function(directory, pollutant, id = 1:332) {filelist <- list(path = directory, pattern = ".csv", full.names = TRUE) values = numeric()         }
pollutantmean <- function(directory, pollutant, id = 1:332) {
filelist <- list.files(path = directory, pattern = ".csv" full.names = TRUE)
values <- numeric()
for (i in id) {
data <- read.csv(filelist[i])
values <- c(values, data[[pollutant]])                                           }
mean(values, na.rm = TRUE)
}
pollutmean <- function(directory, pollutant, id = 1:332) {}
setwd("~/Dropbox/getting-and-cleaning-data-git")
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl,destfile="./data/Dataset.zip")
# Unzip dataSet to /data directory
unzip(zipfile="./data/Dataset.zip",exdir="./data")
# Reading trainings table:
x_train <- read.table("./data/UCI HAR Dataset/train/X_train.txt")
y_train <- read.table("./data/UCI HAR Dataset/train/y_train.txt")
subject_train <- read.table("./data/UCI HAR Dataset/train/subject_train.txt")
# Reading testing tables:
x_test <- read.table("./data/UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("./data/UCI HAR Dataset/test/y_test.txt")
subject_test <- read.table("./data/UCI HAR Dataset/test/subject_test.txt")
# Reading features:
features <- read.table('./data/UCI HAR Dataset/features.txt')
# Reading activity labels:
activityLabels = read.table('./data/UCI HAR Dataset/activity_labels.txt')
colnames(x_train) <- features[,2]
colnames(y_train) <-"activityId"
colnames(subject_train) <- "subjectId"
colnames(x_test) <- features[,2]
colnames(y_test) <- "activityId"
colnames(subject_test) <- "subjectId"
colnames(activityLabels) <- c('activityId','activityType')
merge_train <- cbind(y_train, subject_train, x_train)
merge_test <- cbind(y_test, subject_test, x_test)
setAllinOne <- rbind(merge_train, merge_test)
colNames <- colnames(setAllinOne)
mean_and_std <- (grepl("activityId" , colNames) |
grepl("subjectId" , colNames) |
grepl("mean.." , colNames) |
grepl("std.." , colNames)
)
setForMeanAndStd <- setAllinOne[ , mean_and_std == TRUE]
setWithActivityNames <- merge(setForMeanAndStd, activityLabels,
by='activityId',
all.x=TRUE)
TidySet <- aggregate(. ~subjectId + activityId, setWithActivityNames, mean)
TidySet <- TidySet[order(TidySet$subjectId, TidySet$activityId),]
write.table(TidySet, "TidySet.txt", row.name=FALSE)
View(activityLabels)
View(features)
View(merge_test)
View(merge_train)
View(setAllinOne)
View(setWithActivityNames)
source('~/Dropbox/getting-and-cleaning-data-git/run_analsysis.R')
